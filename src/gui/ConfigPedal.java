package gui;

public class ConfigPedal {
	public boolean changed; 
	public boolean type;
	public boolean autoLevels;
	public boolean altIn;
	public boolean reverseLevels;
	public short curve;
	public short chickDelay;
	public short cc;
	public int lowLevel;
	public int highLevel;
	public short openLevel;
	public short closedLevel;
	public short shortThres;
	public short longThres;
	public short hhInput;
	public boolean softChicks;
	public short semiOpenLevel;
	public short halfOpenLevel;
	public short bowSemiOpenNote;
	public short edgeSemiOpenNote;
	public short bellSemiOpenNote;
	public short bowHalfOpenNote;
	public short edgeHalfOpenNote;
	public short bellHalfOpenNote;
	public short bowSemiClosedNote;
	public short edgeSemiClosedNote;
	public short bellSemiClosedNote;
	public short bowClosedNote;
	public short edgeClosedNote;
	public short bellClosedNote;
	public short chickNote;
	public short splashNote;
	
	private byte [] sysex_byte;
	private byte [] sysex_short;
	private byte [] sysex;
	private byte flags;

	
	public ConfigPedal (){
		changed = false;
		sysex = new byte[Constants.MD_SYSEX_PEDAL_SIZE];
		sysex_byte = new byte[2];
		sysex_short = new byte[4];
	}
	
	public byte [] getSysex(int chain_id) {
		int i = 0;

		sysex[i++] = Constants.SYSEX_START;
		sysex[i++] = Constants.MD_SYSEX;
		sysex[i++] = (byte) chain_id;
		sysex[i++] = Constants.MD_SYSEX_PEDAL;

		flags = (byte) (((type)?1:0)|(((autoLevels)?1:0)<<1)|(((altIn)?1:0)<<2)|(((reverseLevels)?1:0)<<3)
				|(curve<<4));
		sysex_byte = Utils.byte2sysex(flags);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)chickDelay);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)cc);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_short = Utils.short2sysex((short)lowLevel);
		sysex[i++] = sysex_short[0];
		sysex[i++] = sysex_short[1];
		sysex[i++] = sysex_short[2];
		sysex[i++] = sysex_short[3];
		sysex_short = Utils.short2sysex((short)highLevel);
		sysex[i++] = sysex_short[0];
		sysex[i++] = sysex_short[1];
		sysex[i++] = sysex_short[2];
		sysex[i++] = sysex_short[3];
		sysex_byte = Utils.byte2sysex((byte)openLevel);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)closedLevel);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)shortThres);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)longThres);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)hhInput);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		flags = (byte) ((softChicks)?1:0);
		sysex_byte = Utils.byte2sysex((byte)flags);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)semiOpenLevel);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)halfOpenLevel);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bowSemiOpenNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)edgeSemiOpenNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bellSemiOpenNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bowHalfOpenNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)edgeHalfOpenNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bellHalfOpenNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bowSemiClosedNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)edgeSemiClosedNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bellSemiClosedNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bowClosedNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)edgeClosedNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)bellClosedNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)chickNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex_byte = Utils.byte2sysex((byte)splashNote);
		sysex[i++] = sysex_byte[0];
		sysex[i++] = sysex_byte[1];
		sysex[i++] = Constants.SYSEX_END;
		return sysex;
	}

	public void setFromSysex(byte [] sx) {
		int i = 4;
		if (sx.length >= Constants.MD_SYSEX_PEDAL_SIZE) {
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			flags = Utils.sysex2byte(sysex_byte);
			type = ((flags&1) != 0);
			autoLevels = ((flags&(1<<1)) != 0);
			altIn = ((flags&(1<<2)) != 0);
			reverseLevels = ((flags&(1<<3)) != 0);
			curve = (short)((flags&0xf0)>>4);
			
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			chickDelay = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			cc = Utils.sysex2byte(sysex_byte);
			sysex_short[0] = sx[i++];
			sysex_short[1] = sx[i++];
			sysex_short[2] = sx[i++];
			sysex_short[3] = sx[i++];
			lowLevel = Utils.sysex2short(sysex_short);
			sysex_short[0] = sx[i++];
			sysex_short[1] = sx[i++];
			sysex_short[2] = sx[i++];
			sysex_short[3] = sx[i++];
			highLevel = Utils.sysex2short(sysex_short);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			openLevel = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			closedLevel = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			shortThres = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			longThres = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			hhInput = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			flags = Utils.sysex2byte(sysex_byte);
			softChicks = ((flags&1) != 0);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			semiOpenLevel = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			halfOpenLevel = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bowSemiOpenNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			edgeSemiOpenNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bellSemiOpenNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bowHalfOpenNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			edgeHalfOpenNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bellHalfOpenNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bowSemiClosedNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			edgeSemiClosedNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bellSemiClosedNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bowClosedNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			edgeClosedNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			bellClosedNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			chickNote = Utils.sysex2byte(sysex_byte);
			sysex_byte[0] = sx[i++];
			sysex_byte[1] = sx[i++];
			splashNote = Utils.sysex2byte(sysex_byte);
			changed = true;
		}
	}

}
